{"version":3,"sources":["Header.js","TextBox.js","DisplayBox.js","TranslateButton.js","TimerButton.js","App.js","index.js"],"names":["Header","props","state","title","this","React","Component","TextBox","className","id","label","LanguageDropdown","name","languageChoices","map","language","value","toLowerCase","DisplayBox","text","TranslateButton","onClick","handleClick","TimerButton","minutes","seconds","App","translated","countingDown","countDown","m","s","displayTranslated","bind","changeLanguage","initiateCountdown","clearInterval","minutesLeft","secondsLeft","setInterval","setState","document","querySelector","console","log","bodyString","replace","fetch","method","mode","headers","body","then","response","json","data","success","contents","error","code","message","alert","split","length","timer","catch","e","button","onChange","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.33a6eb9f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {title: props.title}\r\n    }\r\n  \r\n    render () {\r\n        return (\r\n            <header>\r\n                <h1>{this.state.title}</h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nconst TextBox = props => (\r\n    <div className = \"boxWrapper alignRight\" id = {props.id}>\r\n        <label className = \"labelWrapper\">\r\n            <p id=\"englishTitle\">{props.label}</p>\r\n            <textarea id=\"englishText\" className=\"textBox\"/>\r\n        </label>\r\n    </div>\r\n)\r\n\r\nexport default TextBox;","import React from 'react';\r\n\r\nconst LanguageDropdown = props => (\r\n    <form>\r\n        <label >Choose a Language</label>\r\n        <select id=\"languages\" name=\"languages\">\r\n            {\r\n            props.languageChoices.map((language) => {\r\n                return (<option key ={language.toLowerCase()} value = {language.toLowerCase()}>{language}</option>)\r\n            })\r\n            }\r\n        </select>\r\n    </form>\r\n)\r\n\r\n\r\nconst DisplayBox = props => (\r\n    <div className = \"boxWrapper alignLeft\" id = {props.id}>\r\n        <label className = \"labelWrapper\">\r\n            <LanguageDropdown languageChoices={props.languageChoices}/>\r\n            <div className = \"displayBox\">\r\n                {props.text}\r\n            </div>\r\n            {/* <textarea  name ={props.name} className=\"displayBox\"/> */}\r\n        </label>\r\n\r\n    </div>\r\n)\r\n\r\nexport default DisplayBox;","import React from 'react';\r\n\r\n\r\nconst TranslateButton = props => (\r\n    <div className=\"buttonDiv\">\r\n        <button onClick = {props.handleClick} className=\"btn\" >Translate</button>\r\n    </div>\r\n)\r\n\r\nexport default TranslateButton;","import React from 'react';\r\n\r\n\r\nconst TimerButton = props => (\r\n    <div className=\"buttonDiv\">\r\n        <button className=\"btn\" >Can Translate in {props.minutes}:{props.seconds}</button>\r\n    </div>\r\n)\r\n\r\nexport default TimerButton;","import React from 'react';\nimport './editor.css'\nimport Header from './Header'\nimport TextBox from './TextBox'\nimport DisplayBox from './DisplayBox'\nimport TranslateButton from './TranslateButton'\nimport TimerButton from './TimerButton'\n\nclass App extends React.Component {  \n    constructor(props){\n        super(props)\n        this.state = {\n                        languageChoices: [\"Yoda\",\"Sith\",\"Gungan\",\"Huttese\",\"Mandalorian\",\"Cheunh\",\"Klingon\",\"Vulcan\",\"Dothraki\",\"Valyrian\",\"Pirate\",\"Shakespeare\"],\n                        translated: \"Translated\",\n                        countingDown: false,\n                        countDown: null,\n                        m: 0,\n                        s: 0,\n                    }\n        this.displayTranslated = this.displayTranslated.bind(this)\n        this.changeLanguage = this.changeLanguage.bind(this)\n        this.initiateCountdown = this.initiateCountdown.bind(this)\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.state.countDown)\n    }\n\n    initiateCountdown(minutesLeft, secondsLeft) {\n        let seconds = secondsLeft\n        let minutes = minutesLeft\n        let countDown = setInterval(function(){\n            seconds -= 1\n            if (seconds < 0){\n                seconds = 59\n                minutes -= 1\n                if (minutes < 0){\n                    clearInterval(this.state.countDown)\n                }\n            }\n            this.setState({m: minutes, s: seconds})\n        }.bind(this), 1000)\n        return countDown\n    }\n\n    displayTranslated(){\n        const language = document.querySelector(\"#languages\").value\n        console.log(language)\n        let text = document.querySelector(\"#englishText\").value\n        const bodyString = text.replace(/\\s/g,'+')\n        console.log(bodyString)\n        fetch('https://api.funtranslations.com/translate/'+language,{\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n            },\n            body: \"text=\"+bodyString\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                if (data.success){\n                    this.setState({translated: data.contents.translated})\n                } else if (data.error.code === 429){\n                    alert(data.error.message)\n                    if (this.state.countingDown === false){\n                        const split = data.error.message.split(\" \")\n                        const secondsLeft = split[split.length - 2]\n                        const minutesLeft=  split[split.length - 5]\n                        const timer = this.initiateCountdown(minutesLeft, secondsLeft)\n                        this.setState({countingDown: true, countDown: timer})\n                    }\n                } else{\n                    throw data.error.message\n                }\n            })\n            .catch(e => {\n                alert(e)\n            })\n        \n    }\n\n\n    changeLanguage(value){\n        this.setState({language: value})\n    }\n\n    render () {\n        let button = !this.state.countingDown ? <TranslateButton handleClick = {this.displayTranslated} /> : <TimerButton seconds={this.state.s} minutes = {this.state.m}/>\n        return (\n            <div>\n                <Header title=\"Fun Translator\" />    \n                <main className=\"main\">\n                    <TextBox label=\"English Text\" name = \"bingo\"/>\n                    <DisplayBox onChange={this.changeLanguage} label=\"Translated Text\" text = {this.state.translated} languageChoices={this.state.languageChoices}/>\n                </main>\n                {button}\n\n                \n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}